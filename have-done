#!/usr/bin/perl
use strict;
use warnings;

die "Usage: $0 activities.txt\n" unless @ARGV == 1;

my @activities;

while (<>) {
    next if /^\s*#/;
    chomp;
    my ( $date, $type, $what, $url ) = split /\|/;
    push @activities,
      {
        type => $type,
        what => $what,
        date => $date,
        url  => $url,
      };
}

# Get all years when I have done (and recorded) something...
my %years;
for (@activities) {
    if ( $_->{date} =~ /^(\d{4})-/ ) {
        $years{$1}++;
    }
}

# Print header...
print <<HEADER;
NOTE: this file was **generated** by `$0`.

You earn your living by having enough knowledge (theory) and experience
(practice). However, these are *expiring* assets so you have to keep them
fresh. While honing your *knowledge* keep in mind these principles:

* Invest regularly - make learning a habit
* Diversify - know the ins and outs of the technology you are working with
  currently but don't stop there
* Stay current - read news, take classes, go to conferences
* Contribute - QaA, blogs, code
* Review and rebalance - this is a very dynamic industry
* *Think* critically about what you read and hear - be aware of vendors
  interests, media hype, dogma and your project

> It's important to continue investing. Once you feel confortable with some new
language or bit of technology, move on. Learn another one. It doesn't matter
whether you ever use any of these technologies, or even whether you put them on
your resume. -- The Pragmatic Programmer

HEADER

# Print summary header in markdown format...
for my $year ( reverse sort keys %years ) {

    # Count by activity type and get the longest activity name...
    my %count;
    my $longest = 0;
    for (@activities) {
        next unless ( split '-', $_->{date} )[0] == $year;
        $count{ $_->{type} }++;
        $longest = length( $_->{type} ) if length( $_->{type} ) > $longest;
    }

    print "$year\n";

    # Print statistics...
    print "```\n";
    for ( sort { $count{$b} <=> $count{$a} or $a cmp $b } keys %count ) {
        printf "%-${longest}s %s\n", $_, "+" x $count{$_};
    }
    print "```\n";
}

# Print all activities in markdown format...
my $date = "";
for ( sort { $b->{date} cmp $a->{date} } @activities ) {
    print "\n$_->{date}\n" unless $_->{date} eq $date;
    print "* $_->{type} ";
    print $_->{url} ? "[$_->{what}]($_->{url})" : "$_->{what}";
    print "\n";
    $date = $_->{date};
}
