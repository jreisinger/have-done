#!/usr/bin/perl
use strict;
use warnings;

my @activities;

while (<>) {
    next if /^\s*#/;
    chomp;
    my ( $date, $type, $what, $url ) = split /\|/;
    push @activities,
      {
        type => $type,
        what => $what,
        date => $date,
        url  => $url,
      };
}

# Get all years when I have done (and recorded) something...
my %years;
for (@activities) {
    if ( $_->{date} =~ /^(\d{4})-/ ) {
        $years{$1}++;
    }
}

# Print header...
print <<HEADER;
NOTE: this file was **generated** by `$0`.

> Read the manuals from front to back, then regularly read books and blogs.
There's always more to learn. -- ULSAH, 5th

You earn your living by having enough knowledge (theory) and experience
(practice). However, these are expiring assets so you have to keep them fresh.
While honing your knowledge keep in mind these principles (based on The Pragmatic Programmer):

* Invest regularly - the *habit* itself is as important as the amount
* Diversify - know the ins and outs of the technology you are working with
  currently but *don't stop* there
* Stay current - read news, take classes, go to conferences
* Contribute - QaA, blogs, code
* Review and rebalance
HEADER

# Print summary header in markdown format...
for my $year ( reverse sort keys %years ) {

    # Count by activity type and get the longest activity name...
    my %count;
    my $longest = 0;
    for (@activities) {
        next unless ( split '-', $_->{date} )[0] == $year;
        $count{ $_->{type} }++;
        $longest = length( $_->{type} ) if length( $_->{type} ) > $longest;
    }

    print "$year\n";

    # Print statistics...
    print "```\n";
    for ( sort { $count{$a} <=> $count{$b} } keys %count ) {
        printf "%-${longest}s %s\n", $_, "+" x $count{$_};
    }
    print "```\n";
}

# Print all activities in markdown format...
my $date = "";
for ( sort { $b->{date} cmp $a->{date} } @activities ) {
    print "\n$_->{date}\n" unless $_->{date} eq $date;
    print "* $_->{type} ";
    print $_->{url} ? "[$_->{what}]($_->{url})" : "$_->{what}";
    print "\n";
    $date = $_->{date};
}
